{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"container\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Input = _resolveComponent(\"Input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_Row = _resolveComponent(\"Row\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_Drawer = _resolveComponent(\"Drawer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Button, {\n    type: \"primary\",\n    onClick: $setup.showDrawer\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" New Account \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 使用 v-model 来控制 Drawer 的显示和隐藏 \"), _createVNode(_component_Drawer, {\n    title: \"调度功能页面\",\n    width: 400,\n    visible: $setup.open,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => $setup.open = $event),\n    onClose: $setup.onClose,\n    style: {\n      zIndex: 999\n    },\n    \"<!--\": \"\",\n    保证: \"\",\n    Drawer: \"\",\n    的: \"\",\n    zIndex: \"\",\n    适当: \"\",\n    \"--\": \"\"\n  }, {\n    default: _withCtx(() => [_cache[7] || (_cache[7] = _createTextVNode(\" > \")), _createVNode(_component_Form, {\n      model: $setup.form,\n      onFinish: $setup.onSubmit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          label: \"车辆数量\",\n          name: \"vehicleCount\",\n          rules: [{\n            required: true,\n            message: '请输入车辆数量'\n          }],\n          hasFeedback: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Input, {\n            modelValue: $setup.form.vehicleCount,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.vehicleCount = $event),\n            placeholder: \"一 或者 二\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_Row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          label: \"车辆荷载量\",\n          name: \"loadCapacity\",\n          rules: [{\n            required: true,\n            message: '请输入车辆荷载量'\n          }],\n          hasFeedback: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Input, {\n            modelValue: $setup.form.loadCapacity,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.loadCapacity = $event),\n            placeholder: \"请输入车辆的荷载量\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_Row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          label: \"起始位置\",\n          name: \"startLocation\",\n          rules: [{\n            required: true,\n            message: '请输入起始位置'\n          }],\n          hasFeedback: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Input, {\n            modelValue: $setup.form.startLocation,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.startLocation = $event),\n            placeholder: \"请输入1-18号点号\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_Row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          label: \"终止位置\",\n          name: \"endLocation\",\n          rules: [{\n            required: true,\n            message: '请输入终止位置'\n          }],\n          hasFeedback: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Input, {\n            modelValue: $setup.form.endLocation,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.endLocation = $event),\n            placeholder: \"请输入1-18号点号\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_Row, null, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, null, {\n          default: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"button\", null, \"计算\", -1 /* HOISTED */)])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"onFinish\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onClose\"])])]);\n}","map":{"version":3,"names":["id","style","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_Button","type","onClick","$setup","showDrawer","default","_withCtx","_cache","_createTextVNode","_","_createCommentVNode","_component_Drawer","title","width","visible","open","$event","onClose","zIndex","保证","Drawer","的","适当","_component_Form","model","form","onFinish","onSubmit","_component_Row","gutter","_component_a_form_item","label","name","rules","required","message","hasFeedback","_component_Input","modelValue","vehicleCount","placeholder","loadCapacity","startLocation","endLocation"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\LocationWindow.vue"],"sourcesContent":["<template>\r\n  <div id=\"container\" style=\"width: 100%; height: 100%\">\r\n    <div class=\"button-container\">\r\n      <Button type=\"primary\" @click=\"showDrawer\"> New Account </Button>\r\n\r\n      <!-- 使用 v-model 来控制 Drawer 的显示和隐藏 -->\r\n      <Drawer\r\n        title=\"调度功能页面\"\r\n        :width=\"400\"\r\n        v-model:visible=\"open\"\r\n        @close=\"onClose\"\r\n        :style=\"{ zIndex: 999 }\"\r\n        <!--\r\n        保证\r\n        Drawer\r\n        的\r\n        zIndex\r\n        适当\r\n        --\r\n      >\r\n        >\r\n        <Form :model=\"form\" @finish=\"onSubmit\">\r\n          <Row :gutter=\"16\">\r\n            <a-form-item\r\n              label=\"车辆数量\"\r\n              name=\"vehicleCount\"\r\n              :rules=\"[{ required: true, message: '请输入车辆数量' }]\"\r\n              hasFeedback\r\n            >\r\n              <Input v-model=\"form.vehicleCount\" placeholder=\"一 或者 二\" />\r\n            </a-form-item>\r\n          </Row>\r\n          <Row :gutter=\"16\">\r\n            <a-form-item\r\n              label=\"车辆荷载量\"\r\n              name=\"loadCapacity\"\r\n              :rules=\"[{ required: true, message: '请输入车辆荷载量' }]\"\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                v-model=\"form.loadCapacity\"\r\n                placeholder=\"请输入车辆的荷载量\"\r\n              />\r\n            </a-form-item>\r\n          </Row>\r\n          <Row :gutter=\"16\">\r\n            <a-form-item\r\n              label=\"起始位置\"\r\n              name=\"startLocation\"\r\n              :rules=\"[{ required: true, message: '请输入起始位置' }]\"\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                v-model=\"form.startLocation\"\r\n                placeholder=\"请输入1-18号点号\"\r\n              />\r\n            </a-form-item>\r\n          </Row>\r\n          <Row :gutter=\"16\">\r\n            <a-form-item\r\n              label=\"终止位置\"\r\n              name=\"endLocation\"\r\n              :rules=\"[{ required: true, message: '请输入终止位置' }]\"\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                v-model=\"form.endLocation\"\r\n                placeholder=\"请输入1-18号点号\"\r\n              />\r\n            </a-form-item>\r\n          </Row>\r\n          <Row>\r\n            <a-form-item>\r\n              <button>计算</button>\r\n            </a-form-item>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getRanderingSorted } from \"@/api/rendering\";\r\nimport { Button, Drawer, Form, Input, Row } from \"ant-design-vue\";\r\n\r\nexport default {\r\n  name: \"MapWindow\",\r\n  components: {\r\n    Button,\r\n    Drawer,\r\n    Form,\r\n    Input,\r\n    Row,\r\n    \"a-form-item\": Form.Item,\r\n  },\r\n  setup() {\r\n    const map = ref(null);\r\n    const polygons = ref([]);\r\n    const open = ref(false); // 控制 Drawer 显示与否\r\n\r\n    // 初始化表单对象\r\n    const form = ref({\r\n      vehicleCount: \"\", // 车辆数量\r\n      loadCapacity: \"\", // 荷载量\r\n      startLocation: \"\", // 起始位置\r\n      endLocation: \"\", // 终止位置\r\n    });\r\n\r\n    const showDrawer = () => {\r\n      open.value = true; // 打开 Drawer\r\n    };\r\n\r\n    const onClose = () => {\r\n      open.value = false; // 关闭 Drawer\r\n    };\r\n\r\n    // 提交表单时的操作\r\n    const onSubmit = (values) => {\r\n      console.log(\"Form Submitted:\", values);\r\n    };\r\n\r\n    // 加载并初始化地图\r\n    const loadAMapApi = () => {\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src =\r\n        \"https://webapi.amap.com/maps?v=2.0&key=a6042dfaa8137c1bd9f59034cd3021a3\";\r\n      document.head.appendChild(script);\r\n\r\n      script.onload = () => {\r\n        initMap();\r\n      };\r\n    };\r\n\r\n    const initMap = () => {\r\n      const layer = new AMap.createDefaultLayer({\r\n        zooms: [3, 20],\r\n        visible: true,\r\n        opacity: 1,\r\n        zIndex: 0,\r\n      });\r\n\r\n      map.value = new AMap.Map(\"container\", {\r\n        viewMode: \"2D\",\r\n        zoom: 16.3,\r\n        center: [113.266949, 35.188365],\r\n        layer: [layer],\r\n      });\r\n    };\r\n\r\n    // 获取并渲染数据\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await getRanderingSorted();\r\n        console.log(\"Response:\", response.data);\r\n\r\n        if (response.data.code === 0 && Array.isArray(response.data.data)) {\r\n          const formattedPolygons = response.data.data.map((item) => {\r\n            const coordinates = item.coordinates;\r\n            console.log(coordinates);\r\n            // 创建 AMap.Polygon 实例时，确保它没有被响应式包裹\r\n            const polygon = new AMap.Polygon({\r\n              path: coordinates,\r\n              fillColor: \"#ccebc5\",\r\n              strokeOpacity: 1,\r\n              fillOpacity: 0.5,\r\n              strokeColor: \"#2b8cbe\",\r\n              strokeWeight: 1,\r\n              strokeStyle: \"dashed\",\r\n              strokeDasharray: [5, 5],\r\n            });\r\n\r\n            return polygon;\r\n          });\r\n\r\n          polygons.value = formattedPolygons; // 更新 polygons\r\n\r\n          // 延迟添加多边形到地图\r\n          setTimeout(() => {\r\n            addPolygonsToMap(polygons.value);\r\n          }, 500);\r\n        } else {\r\n          console.error(\"Invalid data format\", response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching polygons:\", error);\r\n      }\r\n    });\r\n\r\n    // 将多边形添加到地图\r\n    const addPolygonsToMap = (polygons) => {\r\n      if (Array.isArray(polygons)) {\r\n        polygons.forEach((polygon) => {\r\n          // 确保每个 polygon 是 AMap.Polygon 实例\r\n          if (polygon instanceof AMap.Polygon) {\r\n            map.value.add(polygon); // 添加有效的 AMap.Polygon 实例到地图\r\n          } else {\r\n            console.error(\"Invalid polygon item\", polygon);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"Polygons is not an array:\", polygons);\r\n      }\r\n    };\r\n\r\n    // 加载并初始化地图 API\r\n    onMounted(() => {\r\n      loadAMapApi();\r\n    });\r\n\r\n    return {\r\n      map,\r\n      polygons,\r\n      onClose,\r\n      showDrawer,\r\n      open, // 需要返回给模板以便使用\r\n      form,\r\n      onSubmit,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody,\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.amap-logo {\r\n  display: none !important;\r\n}\r\n\r\n.amap-copyright {\r\n  opacity: 0 !important;\r\n}\r\n\r\n/* 按钮容器的样式 */\r\n.button-container {\r\n  position: absolute;\r\n  top: 50px; /* 按钮距离顶部 20px */\r\n  right: 70px; /* 按钮距离右边 20px */\r\n  z-index: 9999; /* 确保按钮位于地图的顶部 */\r\n}\r\n\r\n/* 确保 Drawer 的 z-index 比 Button 的 z-index 小 */\r\n.ant-drawer {\r\n  z-index: 1000 !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}