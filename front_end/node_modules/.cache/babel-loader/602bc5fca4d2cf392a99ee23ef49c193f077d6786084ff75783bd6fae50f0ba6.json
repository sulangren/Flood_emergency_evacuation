{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport { getTramSorted } from \"@/api/tram\"; // 假设 getShopsSorted 是导入的 API 调用函数\n\nexport default defineComponent({\n  setup() {\n    // 查询参数\n    const queryParam = ref({\n      selectedOption: \"\"\n    });\n\n    // 表格数据\n    const data = ref([]);\n\n    // 分页参数\n    const current = ref(1);\n    const pageSize = ref(10);\n    const totalItems = ref(0);\n\n    // 查询数据\n    function fetchData() {\n      // page, pageSize\n      // 这里应该是调用API获取数据的逻辑\n      // 模拟数据，实际开发中应该根据page和pageSize来获取数据\n      data.value = [{\n        key: \"1\",\n        name: \"John Doe\"\n      }\n      // 其他数据...\n      ];\n      totalItems.value = 50; // 假设总共有50条数据\n    }\n\n    // 处理查询\n    function handleSearch() {\n      // 根据queryParam.selectedOption执行查询，并重置分页参数\n      current.value = 1;\n      pageSize.value = 10;\n      fetchData(current.value, pageSize.value);\n    }\n\n    // 处理分页变化\n    function handlePageChange(page) {\n      current.value = page;\n      // 根据新的分页参数重新获取数据\n      fetchData(current.value, pageSize.value);\n    }\n\n    // 默认加载排序后的数据\n    onMounted(async () => {\n      try {\n        const response = await getTramSorted();\n        console.log(response.data.data);\n        if (response.data.code === 0) {\n          const formattedData = response.data.data.map(item => ({\n            ...item,\n            tags: item.tags ? item.tags.split(\";\").map(tag => tag.trim()).filter((tag, index, self) => self.indexOf(tag) === index) : [] // 如果没有 tags 字段，设置为一个空数组\n          }));\n          data.value = formattedData;\n        }\n      } catch (error) {\n        console.error(\"Error fetching shops:\", error);\n      }\n    });\n    const columns = [{\n      title: \"编号\",\n      dataIndex: \"id\",\n      key: \"id\" // 唯一标识\n    }, {\n      title: \"当前车辆所属停车点\",\n      dataIndex: \"current_location\",\n      key: \"current_location\" // 唯一标识\n    }, {\n      title: \"当前车辆所属状态\",\n      dataIndex: \"status\",\n      key: \"status\" // 唯一标识\n    }, {\n      title: \"当前自行车剩余电量\",\n      dataIndex: \"remaining_battery\",\n      key: \"remaining_battery\",\n      // 唯一标识\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => a.age - b.age\n    }];\n    return {\n      queryParam,\n      data,\n      columns,\n      current,\n      pageSize,\n      totalItems,\n      handleSearch,\n      handlePageChange\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","onMounted","getTramSorted","setup","queryParam","selectedOption","data","current","pageSize","totalItems","fetchData","value","key","name","handleSearch","handlePageChange","page","response","console","log","code","formattedData","map","item","tags","split","tag","trim","filter","index","self","indexOf","error","columns","title","dataIndex","defaultSortOrder","sorter","a","b","age"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\Data_Sheet.vue"],"sourcesContent":["<template>\r\n  <a-card>\r\n    <a-form layout=\"inline\">\r\n      <a-form-item label=\"选择条件\" class=\"form-item\">\r\n        <a-select\r\n          v-model=\"queryParam.selectedOption\"\r\n          placeholder=\"请选择\"\r\n          class=\"form-item-button-one\"\r\n        >\r\n          <a-select-option value=\"normal\">正常</a-select-option>\r\n          <a-select-option value=\"Low_battery\">低电量(低于20%)</a-select-option>\r\n          <a-select-option value=\"maintenance\">待维护</a-select-option>\r\n          <!-- 根据需要添加更多选项 -->\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          type=\"primary\"\r\n          @click=\"handleSearch\"\r\n          class=\"form-item-button-tow\"\r\n          >查询</a-button\r\n        >\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-card>\r\n\r\n  <a-table\r\n    :columns=\"columns\"\r\n    :data-source=\"data\"\r\n    :row-key=\"(record) => record.id\"\r\n    :pagination=\"false\"\r\n  >\r\n    <template v-slot:bodyCell=\"{ column, record }\">\r\n      <template v-if=\"column.key === 'name'\">\r\n        <a>\r\n          {{ record.name }}\r\n        </a>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'tags'\">\r\n        <span>\r\n          <a-tag\r\n            v-for=\"tag in record.tags\"\r\n            :key=\"tag\"\r\n            :color=\"\r\n              tag === 'loser'\r\n                ? 'volcano'\r\n                : tag.length > 5\r\n                ? 'geekblue'\r\n                : 'green'\r\n            \"\r\n          >\r\n            {{ tag.toUpperCase() }}\r\n          </a-tag>\r\n        </span>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'rate'\">\r\n        <a-rate :value=\"record.rating\" disabled allow-half />\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n\r\n  <a-layout-Footer>\r\n    <a-pagination\r\n      v-model=\"current\"\r\n      :total=\"totalItems\"\r\n      :page-size=\"pageSize\"\r\n      @change=\"handlePageChange\"\r\n      show-size-changer\r\n      show-less-items\r\n    />\r\n  </a-layout-Footer>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted } from \"vue\";\r\nimport { getTramSorted } from \"@/api/tram\"; // 假设 getShopsSorted 是导入的 API 调用函数\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    // 查询参数\r\n    const queryParam = ref({\r\n      selectedOption: \"\",\r\n    });\r\n\r\n    // 表格数据\r\n    const data = ref([]);\r\n\r\n    // 分页参数\r\n    const current = ref(1);\r\n    const pageSize = ref(10);\r\n    const totalItems = ref(0);\r\n\r\n    // 查询数据\r\n    function fetchData() {\r\n      // page, pageSize\r\n      // 这里应该是调用API获取数据的逻辑\r\n      // 模拟数据，实际开发中应该根据page和pageSize来获取数据\r\n      data.value = [\r\n        { key: \"1\", name: \"John Doe\" },\r\n        // 其他数据...\r\n      ];\r\n      totalItems.value = 50; // 假设总共有50条数据\r\n    }\r\n\r\n    // 处理查询\r\n    function handleSearch() {\r\n      // 根据queryParam.selectedOption执行查询，并重置分页参数\r\n      current.value = 1;\r\n      pageSize.value = 10;\r\n      fetchData(current.value, pageSize.value);\r\n    }\r\n\r\n    // 处理分页变化\r\n    function handlePageChange(page) {\r\n      current.value = page;\r\n      // 根据新的分页参数重新获取数据\r\n      fetchData(current.value, pageSize.value);\r\n    }\r\n\r\n    // 默认加载排序后的数据\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await getTramSorted();\r\n        console.log(response.data.data);\r\n        if (response.data.code === 0) {\r\n          const formattedData = response.data.data.map((item) => ({\r\n            ...item,\r\n            tags: item.tags\r\n              ? item.tags\r\n                  .split(\";\")\r\n                  .map((tag) => tag.trim())\r\n                  .filter((tag, index, self) => self.indexOf(tag) === index)\r\n              : [], // 如果没有 tags 字段，设置为一个空数组\r\n          }));\r\n          data.value = formattedData;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching shops:\", error);\r\n      }\r\n    });\r\n\r\n    const columns = [\r\n      {\r\n        title: \"编号\",\r\n        dataIndex: \"id\",\r\n        key: \"id\", // 唯一标识\r\n      },\r\n      {\r\n        title: \"当前车辆所属停车点\",\r\n        dataIndex: \"current_location\",\r\n        key: \"current_location\", // 唯一标识\r\n      },\r\n      {\r\n        title: \"当前车辆所属状态\",\r\n        dataIndex: \"status\",\r\n        key: \"status\", // 唯一标识\r\n      },\r\n      {\r\n        title: \"当前自行车剩余电量\",\r\n        dataIndex: \"remaining_battery\",\r\n        key: \"remaining_battery\", // 唯一标识\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.age - b.age,\r\n      },\r\n    ];\r\n\r\n    return {\r\n      queryParam,\r\n      data,\r\n      columns,\r\n      current,\r\n      pageSize,\r\n      totalItems,\r\n      handleSearch,\r\n      handlePageChange,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;;AA0EA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACrD,SAASC,aAAY,QAAS,YAAY,EAAE;;AAE5C,eAAeH,eAAe,CAAC;EAC7BI,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,UAAS,GAAIJ,GAAG,CAAC;MACrBK,cAAc,EAAE;IAClB,CAAC,CAAC;;IAEF;IACA,MAAMC,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;;IAEpB;IACA,MAAMO,OAAM,GAAIP,GAAG,CAAC,CAAC,CAAC;IACtB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,UAAS,GAAIT,GAAG,CAAC,CAAC,CAAC;;IAEzB;IACA,SAASU,SAASA,CAAA,EAAG;MACnB;MACA;MACA;MACAJ,IAAI,CAACK,KAAI,GAAI,CACX;QAAEC,GAAG,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAW;MAC7B;MAAA,CACD;MACDJ,UAAU,CAACE,KAAI,GAAI,EAAE,EAAE;IACzB;;IAEA;IACA,SAASG,YAAYA,CAAA,EAAG;MACtB;MACAP,OAAO,CAACI,KAAI,GAAI,CAAC;MACjBH,QAAQ,CAACG,KAAI,GAAI,EAAE;MACnBD,SAAS,CAACH,OAAO,CAACI,KAAK,EAAEH,QAAQ,CAACG,KAAK,CAAC;IAC1C;;IAEA;IACA,SAASI,gBAAgBA,CAACC,IAAI,EAAE;MAC9BT,OAAO,CAACI,KAAI,GAAIK,IAAI;MACpB;MACAN,SAAS,CAACH,OAAO,CAACI,KAAK,EAAEH,QAAQ,CAACG,KAAK,CAAC;IAC1C;;IAEA;IACAV,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMgB,QAAO,GAAI,MAAMf,aAAa,CAAC,CAAC;QACtCgB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACX,IAAI,CAACA,IAAI,CAAC;QAC/B,IAAIW,QAAQ,CAACX,IAAI,CAACc,IAAG,KAAM,CAAC,EAAE;UAC5B,MAAMC,aAAY,GAAIJ,QAAQ,CAACX,IAAI,CAACA,IAAI,CAACgB,GAAG,CAAEC,IAAI,KAAM;YACtD,GAAGA,IAAI;YACPC,IAAI,EAAED,IAAI,CAACC,IAAG,GACVD,IAAI,CAACC,IAAG,CACLC,KAAK,CAAC,GAAG,EACTH,GAAG,CAAEI,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACvBC,MAAM,CAAC,CAACF,GAAG,EAAEG,KAAK,EAAEC,IAAI,KAAKA,IAAI,CAACC,OAAO,CAACL,GAAG,MAAMG,KAAK,IAC3D,EAAE,CAAE;UACV,CAAC,CAAC,CAAC;UACHvB,IAAI,CAACK,KAAI,GAAIU,aAAa;QAC5B;MACF,EAAE,OAAOW,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;IAEF,MAAMC,OAAM,GAAI,CACd;MACEC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfvB,GAAG,EAAE,IAAI,CAAE;IACb,CAAC,EACD;MACEsB,KAAK,EAAE,WAAW;MAClBC,SAAS,EAAE,kBAAkB;MAC7BvB,GAAG,EAAE,kBAAkB,CAAE;IAC3B,CAAC,EACD;MACEsB,KAAK,EAAE,UAAU;MACjBC,SAAS,EAAE,QAAQ;MACnBvB,GAAG,EAAE,QAAQ,CAAE;IACjB,CAAC,EACD;MACEsB,KAAK,EAAE,WAAW;MAClBC,SAAS,EAAE,mBAAmB;MAC9BvB,GAAG,EAAE,mBAAmB;MAAE;MAC1BwB,gBAAgB,EAAE,SAAS;MAC3BC,MAAM,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,GAAE,GAAID,CAAC,CAACC;IAC9B,CAAC,CACF;IAED,OAAO;MACLpC,UAAU;MACVE,IAAI;MACJ2B,OAAO;MACP1B,OAAO;MACPC,QAAQ;MACRC,UAAU;MACVK,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}