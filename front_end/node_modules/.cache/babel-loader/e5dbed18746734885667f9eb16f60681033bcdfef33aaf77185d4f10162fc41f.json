{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// request.js\n\n// 导入 axios 用于发起 HTTP 请求\nimport axios from \"axios\";\n// 导入 Pinia store\nimport { useAuthStore } from \"@/storage/userStorage\";\n// 导入 Vue Router\nimport router from \"@/router\"; // 确保路径正确\n\n// 创建 axios 实例\nconst myAxios = axios.create({\n  // 设置基础 URL\n  baseURL: \"http://localhost:8000\",\n  // 设置请求超时时间\n  timeout: 10000,\n  // 允许携带 cookie\n  withCredentials: true\n});\n\n// 添加请求拦截器\nmyAxios.interceptors.request.use(config => {\n  // 设置请求头\n  myAxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  // 获取 Pinia store 中的 token\n  const authStore = useAuthStore();\n  const token = authStore.user.token;\n  // 如果 token 存在，则添加到请求头中\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n  return config;\n}, error => {\n  // 处理请求错误\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\nmyAxios.interceptors.response.use(response => {\n  // 处理响应数据\n  return response;\n}, error => {\n  // 获取响应对象\n  const response = error.response;\n  if (response) {\n    // 如果状态码为 401 或 403，处理未授权或无权限的情况\n    if (response.status === 401 || response.status === 403) {\n      console.log(\"User is not logged in or does not have permission.\");\n      // 重定向到登录页面，并携带重定向路径\n      router.push({\n        path: \"/\",\n        query: {\n          redirect: window.location.href\n        }\n      });\n    }\n    // 如果返回的错误信息为 \"Invalid credentials\"，则打印提示\n    if (response.data.error === \"Invalid credentials\") {\n      console.log(\"Invalid credentials provided.\");\n    }\n  }\n  // 处理响应错误\n  return Promise.reject(error);\n});\n\n// 导出 axios 实例\nexport default myAxios;","map":{"version":3,"names":["axios","useAuthStore","router","myAxios","create","baseURL","timeout","withCredentials","interceptors","request","use","config","defaults","headers","common","authStore","token","user","error","Promise","reject","response","status","console","log","push","path","query","redirect","window","location","href","data"],"sources":["E:/code/Django/project/front/front/src/request.js"],"sourcesContent":["// request.js\r\n\r\n// 导入 axios 用于发起 HTTP 请求\r\nimport axios from \"axios\";\r\n// 导入 Pinia store\r\nimport { useAuthStore } from \"@/storage/userStorage\";\r\n// 导入 Vue Router\r\nimport router from \"@/router\"; // 确保路径正确\r\n\r\n// 创建 axios 实例\r\nconst myAxios = axios.create({\r\n  // 设置基础 URL\r\n  baseURL: \"http://localhost:8000\",\r\n  // 设置请求超时时间\r\n  timeout: 10000,\r\n  // 允许携带 cookie\r\n  withCredentials: true,\r\n});\r\n\r\n// 添加请求拦截器\r\nmyAxios.interceptors.request.use(\r\n  (config) => {\r\n    // 设置请求头\r\n    myAxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\n    // 获取 Pinia store 中的 token\r\n    const authStore = useAuthStore();\r\n    const token = authStore.user.token;\r\n    // 如果 token 存在，则添加到请求头中\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // 处理请求错误\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\nmyAxios.interceptors.response.use(\r\n  (response) => {\r\n    // 处理响应数据\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // 获取响应对象\r\n    const response = error.response;\r\n    if (response) {\r\n      // 如果状态码为 401 或 403，处理未授权或无权限的情况\r\n      if (response.status === 401 || response.status === 403) {\r\n        console.log(\"User is not logged in or does not have permission.\");\r\n        // 重定向到登录页面，并携带重定向路径\r\n        router.push({\r\n          path: \"/\",\r\n          query: { redirect: window.location.href },\r\n        });\r\n      }\r\n      // 如果返回的错误信息为 \"Invalid credentials\"，则打印提示\r\n      if (response.data.error === \"Invalid credentials\") {\r\n        console.log(\"Invalid credentials provided.\");\r\n      }\r\n    }\r\n    // 处理响应错误\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 导出 axios 实例\r\nexport default myAxios;\r\n"],"mappings":";AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,YAAY,QAAQ,uBAAuB;AACpD;AACA,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;;AAE/B;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3B;EACAC,OAAO,EAAE,uBAAuB;EAChC;EACAC,OAAO,EAAE,KAAK;EACd;EACAC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;EACV;EACAR,OAAO,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACpE;EACA,MAAMC,SAAS,GAAGd,YAAY,CAAC,CAAC;EAChC,MAAMe,KAAK,GAAGD,SAAS,CAACE,IAAI,CAACD,KAAK;EAClC;EACA,IAAIA,KAAK,EAAE;IACTL,MAAM,CAACE,OAAO,CAAC,eAAe,CAAC,GAAG,SAASG,KAAK,EAAE;EACpD;EACA,OAAOL,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC9BW,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,MAAMG,QAAQ,GAAGH,KAAK,CAACG,QAAQ;EAC/B,IAAIA,QAAQ,EAAE;IACZ;IACA,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACtDC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjE;MACAtB,MAAM,CAACuB,IAAI,CAAC;QACVC,IAAI,EAAE,GAAG;QACTC,KAAK,EAAE;UAAEC,QAAQ,EAAEC,MAAM,CAACC,QAAQ,CAACC;QAAK;MAC1C,CAAC,CAAC;IACJ;IACA;IACA,IAAIV,QAAQ,CAACW,IAAI,CAACd,KAAK,KAAK,qBAAqB,EAAE;MACjDK,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C;EACF;EACA;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}