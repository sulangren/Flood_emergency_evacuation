{"ast":null,"code":"import { defineStore } from \"pinia\";\nimport { bufferRegister } from \"@/api/function\";\nexport const functionAuthStore = defineStore(\"auth\", () => {\n  async function bufferRegisters(id) {\n    try {\n      const response = await bufferRegister(id);\n      if (response.data.code === 0 && response.data.data) {\n        return response.data;\n      } // 假设后端返回的数据结构为 { data: [[113.268774, 35.18784], [113.269978, 35.188001]] }\n    } catch (error) {\n      console.error(\"Failed to fetch point data:\", error);\n      throw error; // 可以根据需要进行进一步处理\n    }\n  }\n  // 返回 store 中的所有响应式属性和函数\n  return {\n    bufferRegisters\n  };\n});","map":{"version":3,"names":["defineStore","bufferRegister","functionAuthStore","bufferRegisters","id","response","data","code","error","console"],"sources":["E:/code/Django/project/front/front/src/storage/functionStorage.js"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport { bufferRegister } from \"@/api/function\";\r\n\r\nexport const functionAuthStore = defineStore(\"auth\", () => {\r\n  async function bufferRegisters(id) {\r\n    try {\r\n      const response = await bufferRegister(id);\r\n      if (response.data.code === 0 && response.data.data) {\r\n        return response.data;\r\n      } // 假设后端返回的数据结构为 { data: [[113.268774, 35.18784], [113.269978, 35.188001]] }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch point data:\", error);\r\n      throw error; // 可以根据需要进行进一步处理\r\n    }\r\n  }\r\n  // 返回 store 中的所有响应式属性和函数\r\n  return {\r\n    bufferRegisters,\r\n  };\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,OAAO,MAAMC,iBAAiB,GAAGF,WAAW,CAAC,MAAM,EAAE,MAAM;EACzD,eAAeG,eAAeA,CAACC,EAAE,EAAE;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,cAAc,CAACG,EAAE,CAAC;MACzC,IAAIC,QAAQ,CAACC,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIF,QAAQ,CAACC,IAAI,CAACA,IAAI,EAAE;QAClD,OAAOD,QAAQ,CAACC,IAAI;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;EACA;EACA,OAAO;IACLL;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}