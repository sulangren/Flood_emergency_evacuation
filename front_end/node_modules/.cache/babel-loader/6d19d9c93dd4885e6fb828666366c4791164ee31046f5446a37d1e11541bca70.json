{"ast":null,"code":"import { defineComponent, ref } from \"vue\";\nimport React from \"react\";\nimport { Table } from \"antd\";\nexport default defineComponent({\n  setup() {\n    // 查询参数\n    const queryParam = ref({\n      selectedOption: \"\"\n    });\n\n    // 表格数据\n    const data = ref([]);\n\n    // 分页参数\n    const current = ref(1);\n    const pageSize = ref(10);\n    const totalItems = ref(0);\n\n    // 查询数据\n    function fetchData() {\n      // page, pageSize\n      // 这里应该是调用API获取数据的逻辑\n      // 模拟数据，实际开发中应该根据page和pageSize来获取数据\n      data.value = [{\n        key: \"1\",\n        name: \"John Doe\"\n      }\n      // 其他数据...\n      ];\n      totalItems.value = 50; // 假设总共有50条数据\n    }\n\n    // 处理查询\n    function handleSearch() {\n      // 根据queryParam.selectedOption执行查询，并重置分页参数\n      current.value = 1;\n      pageSize.value = 10;\n      fetchData(current.value, pageSize.value);\n    }\n\n    // 处理分页变化\n    function handlePageChange(page) {\n      current.value = page;\n      // 根据新的分页参数重新获取数据\n      fetchData(current.value, pageSize.value);\n    }\n\n    // 表格列配置\n    // const columns = [\n    //   {\n    //     title: \"编号\", // 列标题\n    //     dataIndex: \"id\", // 数据对应的字段名\n    //     key: \"id\", // 唯一标识\n    //   },\n    //   {\n    //     title: \"电话\",\n    //     dataIndex: \"phone\",\n    //     key: \"phone\",\n    //   },\n    //   {\n    //     title: \"地址\",\n    //     dataIndex: \"address\",\n    //     key: \"address\",\n    //   },\n    //   {\n    //     title: \"标签\",\n    //     key: \"tags\",\n    //     dataIndex: \"tags\",\n    //   },\n    //   {\n    //     title: \"评分\",\n    //     key: \"rate\",\n    //   },\n    // ];\n\n    const columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      showSorterTooltip: {\n        target: \"full-header\"\n      },\n      filters: [{\n        text: \"Joe\",\n        value: \"Joe\"\n      }, {\n        text: \"Jim\",\n        value: \"Jim\"\n      }, {\n        text: \"Submenu\",\n        value: \"Submenu\",\n        children: [{\n          text: \"Green\",\n          value: \"Green\"\n        }, {\n          text: \"Black\",\n          value: \"Black\"\n        }]\n      }],\n      // specify the condition of filtering result\n      // here is that finding the name started with `value`\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: [\"descend\"]\n    }, {\n      title: \"Age\",\n      dataIndex: \"age\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => a.age - b.age\n    }, {\n      title: \"Address\",\n      dataIndex: \"address\",\n      filters: [{\n        text: \"London\",\n        value: \"London\"\n      }, {\n        text: \"New York\",\n        value: \"New York\"\n      }],\n      onFilter: (value, record) => record.address.indexOf(value) === 0\n    }];\n    return {\n      queryParam,\n      data,\n      columns,\n      current,\n      pageSize,\n      totalItems,\n      handleSearch,\n      handlePageChange\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","React","Table","setup","queryParam","selectedOption","data","current","pageSize","totalItems","fetchData","value","key","name","handleSearch","handlePageChange","page","columns","title","dataIndex","showSorterTooltip","target","filters","text","children","onFilter","record","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","address"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\Data_Sheet.vue"],"sourcesContent":["<template>\r\n  <a-card>\r\n    <a-form layout=\"inline\">\r\n      <a-form-item label=\"选择条件\" class=\"form-item\">\r\n        <a-select\r\n          v-model=\"queryParam.selectedOption\"\r\n          placeholder=\"请选择\"\r\n          class=\"form-item-button-one\"\r\n        >\r\n          <a-select-option value=\"normal\">正常</a-select-option>\r\n          <a-select-option value=\"Low_battery\">低电量(低于20%)</a-select-option>\r\n          <a-select-option value=\"maintenance\">待维护</a-select-option>\r\n          <!-- 根据需要添加更多选项 -->\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          type=\"primary\"\r\n          @click=\"handleSearch\"\r\n          class=\"form-item-button-tow\"\r\n          >查询</a-button\r\n        >\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-card>\r\n\r\n  <a-table :columns=\"columns\" :data-source=\"data\">\r\n    <template v-slot:headerCell=\"{ column }\">\r\n      <template v-if=\"column.key === 'name'\">\r\n        <span>\r\n          <smile-outlined />\r\n          店铺名\r\n        </span>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'rate'\">\r\n        <span> 评分 </span>\r\n      </template>\r\n    </template>\r\n    <template v-slot:bodyCell=\"{ column, record }\">\r\n      <template v-if=\"column.key === 'name'\">\r\n        <a>\r\n          {{ record.name }}\r\n        </a>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'tags'\">\r\n        <span>\r\n          <a-tag\r\n            v-for=\"tag in record.tags\"\r\n            :key=\"tag\"\r\n            :color=\"\r\n              tag === 'loser'\r\n                ? 'volcano'\r\n                : tag.length > 5\r\n                ? 'geekblue'\r\n                : 'green'\r\n            \"\r\n          >\r\n            {{ tag.toUpperCase() }}\r\n          </a-tag>\r\n        </span>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'rate'\">\r\n        <a-rate :value=\"record.rating\" disabled allow-half />\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n\r\n  <a-layout-Footer>\r\n    <a-pagination\r\n      v-model=\"current\"\r\n      :total=\"totalItems\"\r\n      :page-size=\"pageSize\"\r\n      @change=\"handlePageChange\"\r\n      show-size-changer\r\n      show-less-items\r\n    />\r\n  </a-layout-Footer>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from \"vue\";\r\nimport React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    // 查询参数\r\n    const queryParam = ref({\r\n      selectedOption: \"\",\r\n    });\r\n\r\n    // 表格数据\r\n    const data = ref([]);\r\n\r\n    // 分页参数\r\n    const current = ref(1);\r\n    const pageSize = ref(10);\r\n    const totalItems = ref(0);\r\n\r\n    // 查询数据\r\n    function fetchData() {\r\n      // page, pageSize\r\n      // 这里应该是调用API获取数据的逻辑\r\n      // 模拟数据，实际开发中应该根据page和pageSize来获取数据\r\n      data.value = [\r\n        { key: \"1\", name: \"John Doe\" },\r\n        // 其他数据...\r\n      ];\r\n      totalItems.value = 50; // 假设总共有50条数据\r\n    }\r\n\r\n    // 处理查询\r\n    function handleSearch() {\r\n      // 根据queryParam.selectedOption执行查询，并重置分页参数\r\n      current.value = 1;\r\n      pageSize.value = 10;\r\n      fetchData(current.value, pageSize.value);\r\n    }\r\n\r\n    // 处理分页变化\r\n    function handlePageChange(page) {\r\n      current.value = page;\r\n      // 根据新的分页参数重新获取数据\r\n      fetchData(current.value, pageSize.value);\r\n    }\r\n\r\n    // 表格列配置\r\n    // const columns = [\r\n    //   {\r\n    //     title: \"编号\", // 列标题\r\n    //     dataIndex: \"id\", // 数据对应的字段名\r\n    //     key: \"id\", // 唯一标识\r\n    //   },\r\n    //   {\r\n    //     title: \"电话\",\r\n    //     dataIndex: \"phone\",\r\n    //     key: \"phone\",\r\n    //   },\r\n    //   {\r\n    //     title: \"地址\",\r\n    //     dataIndex: \"address\",\r\n    //     key: \"address\",\r\n    //   },\r\n    //   {\r\n    //     title: \"标签\",\r\n    //     key: \"tags\",\r\n    //     dataIndex: \"tags\",\r\n    //   },\r\n    //   {\r\n    //     title: \"评分\",\r\n    //     key: \"rate\",\r\n    //   },\r\n    // ];\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        showSorterTooltip: {\r\n          target: \"full-header\",\r\n        },\r\n        filters: [\r\n          {\r\n            text: \"Joe\",\r\n            value: \"Joe\",\r\n          },\r\n          {\r\n            text: \"Jim\",\r\n            value: \"Jim\",\r\n          },\r\n          {\r\n            text: \"Submenu\",\r\n            value: \"Submenu\",\r\n            children: [\r\n              {\r\n                text: \"Green\",\r\n                value: \"Green\",\r\n              },\r\n              {\r\n                text: \"Black\",\r\n                value: \"Black\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // specify the condition of filtering result\r\n        // here is that finding the name started with `value`\r\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortDirections: [\"descend\"],\r\n      },\r\n      {\r\n        title: \"Age\",\r\n        dataIndex: \"age\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.age - b.age,\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        filters: [\r\n          {\r\n            text: \"London\",\r\n            value: \"London\",\r\n          },\r\n          {\r\n            text: \"New York\",\r\n            value: \"New York\",\r\n          },\r\n        ],\r\n        onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n      },\r\n    ];\r\n\r\n    return {\r\n      queryParam,\r\n      data,\r\n      columns,\r\n      current,\r\n      pageSize,\r\n      totalItems,\r\n      handleSearch,\r\n      handlePageChange,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}