{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from \"vue\";\nimport { getRanderingSorted } from \"@/api/rendering\"; // 获取多边形渲染数据\nimport { topPathRegister } from \"@/api/function\"; // 获取调度数据\nimport { Form, Input, Row } from \"ant-design-vue\";\nexport default {\n  name: \"MapWindow\",\n  components: {\n    \"a-form-item\": Form.Item,\n    Form,\n    Input,\n    Row\n  },\n  setup() {\n    const map = ref(null); // 地图实例\n    const tableData = ref([]); // 存储表格数据\n    const form = ref({\n      vehicleCount: \"\" // 表单中的运输车辆容量\n    });\n\n    // 请求并更新表格数据\n    const handleButtonClick = async () => {\n      try {\n        // 发送请求获取调度数据\n        const response = await topPathRegister({\n          capacity: form.value.vehicleCount // 从表单获取车辆容量\n        });\n        console.log(response);\n        if (response.data.code === 0 && Array.isArray(response.data.data)) {\n          // 更新表格数据\n          tableData.value = response.data.data.map(item => ({\n            dispatchId: item.dispatchId,\n            // 调度ID\n            startPoint: item.startPoint,\n            // 起始点\n            endPoint: item.endPoint,\n            // 终点\n            scheduleAmount: item.scheduleAmount // 调度数量\n          }));\n        } else {\n          console.error(\"Invalid data format\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching schedule data:\", error);\n      }\n    };\n\n    // 加载并初始化地图\n    const loadAMapApi = () => {\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = \"https://webapi.amap.com/maps?v=2.0&key=a6042dfaa8137c1bd9f59034cd3021a3\"; // 请替换为有效的高德地图API Key\n      document.head.appendChild(script);\n      script.onload = () => {\n        initMap();\n      };\n    };\n\n    // 初始化地图\n    const initMap = () => {\n      const layer = new AMap.createDefaultLayer({\n        zooms: [3, 20],\n        visible: true,\n        opacity: 1,\n        zIndex: 0\n      });\n      map.value = new AMap.Map(\"container\", {\n        viewMode: \"2D\",\n        zoom: 16.3,\n        center: [113.266949, 35.188365],\n        // 设置地图中心点坐标\n        layer: [layer]\n      });\n    };\n\n    // 加载并初始化地图 API\n    onMounted(() => {\n      loadAMapApi(); // 加载地图 API\n    });\n\n    // 开始调度\n    const startDispatch = async dispatchId => {\n      try {\n        // 发送请求发起调度\n        const response = await fetch(`/api/start-dispatch/${dispatchId}`, {\n          method: \"POST\"\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert(`调度 ${dispatchId} 已成功启动！`);\n        } else {\n          alert(`调度 ${dispatchId} 启动失败，请重试！`);\n        }\n      } catch (error) {\n        console.error(\"调度启动失败\", error);\n      }\n    };\n    return {\n      map,\n      tableData,\n      handleButtonClick,\n      startDispatch,\n      form\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","getRanderingSorted","topPathRegister","Form","Input","Row","name","components","Item","setup","map","tableData","form","vehicleCount","handleButtonClick","response","capacity","value","console","log","data","code","Array","isArray","item","dispatchId","startPoint","endPoint","scheduleAmount","error","loadAMapApi","script","document","createElement","type","src","head","appendChild","onload","initMap","layer","AMap","createDefaultLayer","zooms","visible","opacity","zIndex","Map","viewMode","zoom","center","startDispatch","fetch","method","json","success","alert"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\LocationWindow.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <!-- 地图容器 -->\r\n    <div id=\"container\" class=\"map\"></div>\r\n\r\n    <!-- 右侧面板容器 -->\r\n    <div class=\"right-sidebar\">\r\n      <!-- 表单输入框，用户填写运输车辆容量 -->\r\n      <Form :model=\"form\" @finish=\"handleButtonClick\">\r\n        <Row :gutter=\"16\">\r\n          <a-form-item label=\"运输车辆容量\" name=\"vehicleCount\" hasFeedback>\r\n            <Input\r\n              v-model:value=\"form.vehicleCount\"\r\n              placeholder=\"请输入运输车辆容量\"\r\n            />\r\n          </a-form-item>\r\n        </Row>\r\n        <Row>\r\n          <a-form-item>\r\n            <button class=\"action-button\">生成调度数据</button>\r\n          </a-form-item>\r\n        </Row>\r\n      </Form>\r\n\r\n      <!-- 表格展示调度数据 -->\r\n      <table class=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>调度ID</th>\r\n            <th>起始点</th>\r\n            <th>终点</th>\r\n            <th>调度数量</th>\r\n            <th>开始调度</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- 动态渲染表格数据 -->\r\n          <tr v-for=\"(row, index) in tableData\" :key=\"index\">\r\n            <td>{{ row.dispatchId }}</td>\r\n            <td>{{ row.startPoint }}</td>\r\n            <td>{{ row.endPoint }}</td>\r\n            <td>{{ row.scheduleAmount }}</td>\r\n            <td>\r\n              <button\r\n                @click=\"startDispatch(row.dispatchId)\"\r\n                class=\"start-dispatch-button\"\r\n              >\r\n                开始调度\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getRanderingSorted } from \"@/api/rendering\"; // 获取多边形渲染数据\r\nimport { topPathRegister } from \"@/api/function\"; // 获取调度数据\r\nimport { Form, Input, Row } from \"ant-design-vue\";\r\n\r\nexport default {\r\n  name: \"MapWindow\",\r\n  components: {\r\n    \"a-form-item\": Form.Item,\r\n    Form,\r\n    Input,\r\n    Row,\r\n  },\r\n\r\n  setup() {\r\n    const map = ref(null); // 地图实例\r\n    const tableData = ref([]); // 存储表格数据\r\n    const form = ref({\r\n      vehicleCount: \"\", // 表单中的运输车辆容量\r\n    });\r\n\r\n    // 请求并更新表格数据\r\n    const handleButtonClick = async () => {\r\n      try {\r\n        // 发送请求获取调度数据\r\n        const response = await topPathRegister({\r\n          capacity: form.value.vehicleCount, // 从表单获取车辆容量\r\n        });\r\n        console.log(response);\r\n\r\n        if (response.data.code === 0 && Array.isArray(response.data.data)) {\r\n          // 更新表格数据\r\n          tableData.value = response.data.data.map((item) => ({\r\n            dispatchId: item.dispatchId, // 调度ID\r\n            startPoint: item.startPoint, // 起始点\r\n            endPoint: item.endPoint, // 终点\r\n            scheduleAmount: item.scheduleAmount, // 调度数量\r\n          }));\r\n        } else {\r\n          console.error(\"Invalid data format\", response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching schedule data:\", error);\r\n      }\r\n    };\r\n\r\n    // 加载并初始化地图\r\n    const loadAMapApi = () => {\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src =\r\n        \"https://webapi.amap.com/maps?v=2.0&key=a6042dfaa8137c1bd9f59034cd3021a3\"; // 请替换为有效的高德地图API Key\r\n      document.head.appendChild(script);\r\n\r\n      script.onload = () => {\r\n        initMap();\r\n      };\r\n    };\r\n\r\n    // 初始化地图\r\n    const initMap = () => {\r\n      const layer = new AMap.createDefaultLayer({\r\n        zooms: [3, 20],\r\n        visible: true,\r\n        opacity: 1,\r\n        zIndex: 0,\r\n      });\r\n\r\n      map.value = new AMap.Map(\"container\", {\r\n        viewMode: \"2D\",\r\n        zoom: 16.3,\r\n        center: [113.266949, 35.188365], // 设置地图中心点坐标\r\n        layer: [layer],\r\n      });\r\n    };\r\n\r\n    // 加载并初始化地图 API\r\n    onMounted(() => {\r\n      loadAMapApi(); // 加载地图 API\r\n    });\r\n\r\n    // 开始调度\r\n    const startDispatch = async (dispatchId) => {\r\n      try {\r\n        // 发送请求发起调度\r\n        const response = await fetch(`/api/start-dispatch/${dispatchId}`, {\r\n          method: \"POST\",\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          alert(`调度 ${dispatchId} 已成功启动！`);\r\n        } else {\r\n          alert(`调度 ${dispatchId} 启动失败，请重试！`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"调度启动失败\", error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      map,\r\n      tableData,\r\n      handleButtonClick,\r\n      startDispatch,\r\n      form,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nhtml,\r\nbody,\r\n#container {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n}\r\n\r\n.map-container {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.map {\r\n  flex-grow: 1;\r\n  height: 100%;\r\n}\r\n\r\n.right-sidebar {\r\n  width: 450px; /* 固定宽度的右侧面板 */\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  overflow-y: auto;\r\n}\r\n\r\n.action-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th,\r\n.data-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.data-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.start-dispatch-button {\r\n  padding: 5px 10px;\r\n  background-color: #008cba;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.start-dispatch-button:hover {\r\n  background-color: #007b9f;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}