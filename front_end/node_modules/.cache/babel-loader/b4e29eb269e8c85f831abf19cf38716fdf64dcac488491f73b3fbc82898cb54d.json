{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Layout, Button, Modal, Form, Input, InputPassword } from \"ant-design-vue\";\nexport default {\n  components: {\n    \"a-layout\": Layout,\n    \"a-layout-header\": Layout.Header,\n    \"a-layout-content\": Layout.Content,\n    \"a-row\": Layout.Row,\n    \"a-col\": Layout.Col,\n    \"a-button\": Button,\n    \"a-modal\": Modal,\n    \"a-form\": Form,\n    \"a-form-item\": Form.Item,\n    \"a-input\": Input,\n    \"a-input-password\": InputPassword\n  },\n  data() {\n    return {\n      isModalVisible: false,\n      activeTab: null,\n      modalTitle: \"用户注册\",\n      isLoginMode: true,\n      // 控制显示登录还是注册表单\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        phone: \"\",\n        employeeKey: \"\"\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.form.validateFields().then(() => {\n        this.$refs.form.submit();\n      }).catch(() => {\n        // 处理验证失败的情况\n      });\n    },\n    handleRegister() {\n      // 检查是否是登录模式，如果是则切换到注册模式\n      if (this.isLoginMode) {\n        this.switchToRegister();\n        // 防止模态框关闭\n        return;\n      }\n      // 如果已经是注册模式，则验证表单\n      this.$refs.registerForm.validateFields().then(() => {\n        console.log(\"注册表单数据：\", this.registerForm);\n        // 注册逻辑\n        // 注册成功后关闭模态框\n        this.isModalVisible = false;\n      }).catch(() => {\n        // 处理验证失败的情况\n      });\n    },\n    switchToRegister() {\n      this.modalTitle = \"用户注册\";\n      this.isLoginMode = false;\n      // 更新模态框标题\n      this.$nextTick(() => {\n        this.$refs.modal.setTitle(this.modalTitle);\n      });\n    },\n    switchToLogin() {\n      this.modalTitle = \"用户登录\";\n      this.isLoginMode = true;\n      // 更新模态框标题\n      this.$nextTick(() => {\n        this.$refs.modal.setTitle(this.modalTitle);\n      });\n    },\n    onFinish(values) {\n      console.log(\"登录成功：\", values);\n      this.isModalVisible = false; // 登录成功后关闭模态框\n    },\n    onRegisterFinish(values) {\n      console.log(\"注册成功：\", values);\n      this.isModalVisible = false; // 注册成功后关闭模态框\n    },\n    onFinishFailed(errorInfo) {\n      console.log(\"Failed:\", errorInfo);\n    },\n    setActiveTab(tabIndex) {\n      this.activeTab = tabIndex;\n      switch (tabIndex) {\n        case 1:\n          this.$router.push({\n            path: \"/\"\n          });\n          break;\n        case 2:\n          this.$router.push({\n            path: \"/data\"\n          });\n          break;\n        case 3:\n          this.$router.push({\n            path: \"/user\"\n          });\n          break;\n        default:\n          this.$router.push({\n            path: \"/\"\n          });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Layout","Button","Modal","Form","Input","InputPassword","components","Header","Content","Row","Col","Item","data","isModalVisible","activeTab","modalTitle","isLoginMode","form","username","password","registerForm","phone","employeeKey","methods","handleLogin","$refs","validateFields","then","submit","catch","handleRegister","switchToRegister","console","log","$nextTick","modal","setTitle","switchToLogin","onFinish","values","onRegisterFinish","onFinishFailed","errorInfo","setActiveTab","tabIndex","$router","push","path"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\MainWindow.vue"],"sourcesContent":["<template>\n  <a-layout class=\"layout\">\n    <!-- 上导航栏一 -->\n    <a-layout-header class=\"header-one\">\n      <a-row align=\"middle\" justify=\"space-between\" class=\"header-one-layout\">\n        <a-col :span=\"22\" class=\"header-one-imger\">\n          <img\n            src=\"../image/Snipaste_2024-12-13_12-10-58.png\"\n            alt=\"Logo\"\n            class=\"logo\"\n          />\n        </a-col>\n        <a-col :span=\"2\">\n          <a-button class=\"a-button-logIn\" @click=\"isModalVisible = true\"\n            >注册/登入</a-button\n          >\n        </a-col>\n      </a-row>\n    </a-layout-header>\n\n    <!-- 弹窗 -->\n    <a-modal\n      ref=\"modal\"\n      v-model:visible=\"isModalVisible\"\n      title=\"用户注册\"\n      okText=\"登入\"\n      cancelText=\"注册\"\n      @ok=\"handleLogin\"\n      @cancel=\"handleRegister\"\n      style=\"top: 30%\"\n    >\n      <a-form\n        ref=\"form\"\n        :model=\"form\"\n        :label-col=\"{ span: 8 }\"\n        :wrapper-col=\"{ span: 16 }\"\n        style=\"max-width: 600px\"\n        @finish=\"onFinish\"\n        @finish-failed=\"onFinishFailed\"\n        autocomplete=\"off\"\n      >\n        <a-form-item\n          label=\"用户名\"\n          name=\"username\"\n          :rules=\"[{ required: true, message: '请输入用户名！' }]\"\n        >\n          <a-input v-model:value=\"form.username\" />\n        </a-form-item>\n\n        <a-form-item\n          label=\"密码\"\n          name=\"password\"\n          :rules=\"[{ required: true, message: '请输入密码！' }]\"\n        >\n          <a-input-password v-model:value=\"form.password\" />\n        </a-form-item>\n      </a-form>\n\n      <a-form\n        v-if=\"!isLoginMode\"\n        ref=\"registerForm\"\n        :model=\"registerForm\"\n        :label-col=\"{ span: 8 }\"\n        :wrapper-col=\"{ span: 16 }\"\n        style=\"max-width: 600px\"\n        @finish=\"onRegisterFinish\"\n        @finish-failed=\"onFinishFailed\"\n        autocomplete=\"off\"\n      >\n        <a-form-item\n          label=\"用户名\"\n          name=\"username\"\n          :rules=\"[{ required: true, message: '请输入用户名！' }]\"\n        >\n          <a-input v-model:value=\"registerForm.username\" />\n        </a-form-item>\n\n        <a-form-item\n          label=\"密码\"\n          name=\"password\"\n          :rules=\"[{ required: true, message: '请输入密码！' }]\"\n        >\n          <a-input-password v-model:value=\"registerForm.password\" />\n        </a-form-item>\n\n        <a-form-item\n          label=\"手机号\"\n          name=\"phone\"\n          :rules=\"[{ required: true, message: '请输入手机号！' }]\"\n        >\n          <a-input v-model:value=\"registerForm.phone\" />\n        </a-form-item>\n\n        <a-form-item\n          label=\"员工密钥\"\n          name=\"employeeKey\"\n          :rules=\"[{ required: false, message: '请输入员工密钥（选填）' }]\"\n        >\n          <a-input v-model:value=\"registerForm.employeeKey\" />\n        </a-form-item>\n      </a-form>\n    </a-modal>\n\n    <!-- 上导航栏二 -->\n    <a-layout-header class=\"header-tow\">\n      <a-row align=\"middle\" justify=\"space-between\" class=\"header-one-layout\">\n        <a-col :span=\"24\" class=\"header-tow-button\">\n          <a-button\n            key=\"1\"\n            @click=\"setActiveTab(1)\"\n            class=\"a-button-Map\"\n            :class=\"{ 'active-tab': activeTab === 1 }\"\n          >\n            首页\n          </a-button>\n          <a-button\n            key=\"2\"\n            @click=\"setActiveTab(2)\"\n            class=\"a-button-Data\"\n            :class=\"{ 'active-tab': activeTab === 2 }\"\n          >\n            产品\n          </a-button>\n          <a-button\n            key=\"3\"\n            @click=\"setActiveTab(3)\"\n            class=\"a-button-user\"\n            :class=\"{ 'active-tab': activeTab === 3 }\"\n          >\n            关于我们\n          </a-button>\n        </a-col>\n      </a-row>\n    </a-layout-header>\n\n    <!-- 主窗体 -->\n    <a-layout-content class=\"content\">\n      <router-view></router-view>\n    </a-layout-content>\n  </a-layout>\n</template>\n\n<script>\nimport {\n  Layout,\n  Button,\n  Modal,\n  Form,\n  Input,\n  InputPassword,\n} from \"ant-design-vue\";\n\nexport default {\n  components: {\n    \"a-layout\": Layout,\n    \"a-layout-header\": Layout.Header,\n    \"a-layout-content\": Layout.Content,\n    \"a-row\": Layout.Row,\n    \"a-col\": Layout.Col,\n    \"a-button\": Button,\n    \"a-modal\": Modal,\n    \"a-form\": Form,\n    \"a-form-item\": Form.Item,\n    \"a-input\": Input,\n    \"a-input-password\": InputPassword,\n  },\n  data() {\n    return {\n      isModalVisible: false,\n      activeTab: null,\n      modalTitle: \"用户注册\",\n      isLoginMode: true, // 控制显示登录还是注册表单\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        phone: \"\",\n        employeeKey: \"\",\n      },\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.form\n        .validateFields()\n        .then(() => {\n          this.$refs.form.submit();\n        })\n        .catch(() => {\n          // 处理验证失败的情况\n        });\n    },\n    handleRegister() {\n      // 检查是否是登录模式，如果是则切换到注册模式\n      if (this.isLoginMode) {\n        this.switchToRegister();\n        // 防止模态框关闭\n        return;\n      }\n      // 如果已经是注册模式，则验证表单\n      this.$refs.registerForm\n        .validateFields()\n        .then(() => {\n          console.log(\"注册表单数据：\", this.registerForm);\n          // 注册逻辑\n          // 注册成功后关闭模态框\n          this.isModalVisible = false;\n        })\n        .catch(() => {\n          // 处理验证失败的情况\n        });\n    },\n\n    switchToRegister() {\n      this.modalTitle = \"用户注册\";\n      this.isLoginMode = false;\n      // 更新模态框标题\n      this.$nextTick(() => {\n        this.$refs.modal.setTitle(this.modalTitle);\n      });\n    },\n\n    switchToLogin() {\n      this.modalTitle = \"用户登录\";\n      this.isLoginMode = true;\n      // 更新模态框标题\n      this.$nextTick(() => {\n        this.$refs.modal.setTitle(this.modalTitle);\n      });\n    },\n\n    onFinish(values) {\n      console.log(\"登录成功：\", values);\n      this.isModalVisible = false; // 登录成功后关闭模态框\n    },\n    onRegisterFinish(values) {\n      console.log(\"注册成功：\", values);\n      this.isModalVisible = false; // 注册成功后关闭模态框\n    },\n    onFinishFailed(errorInfo) {\n      console.log(\"Failed:\", errorInfo);\n    },\n\n    setActiveTab(tabIndex) {\n      this.activeTab = tabIndex;\n      switch (tabIndex) {\n        case 1:\n          this.$router.push({ path: \"/\" });\n          break;\n        case 2:\n          this.$router.push({ path: \"/data\" });\n          break;\n        case 3:\n          this.$router.push({ path: \"/user\" });\n          break;\n        default:\n          this.$router.push({ path: \"/\" });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.ant-modal {\n  top: 90%; /* 根据需要调整这个值 */\n}\n\n.layout {\n  height: 100vh;\n  background: #f0f2f5;\n}\n\n.header-one {\n  background: #001529;\n  padding: 0 16px;\n  height: 50px;\n}\n\n.a-button-logIn {\n  position: relative;\n  border: none;\n  background: #001529;\n  color: #fff;\n  box-shadow: none; /* 去除阴影 */\n  top: -6px;\n}\n\n.header-one-dropdown {\n  margin-left: 16px;\n  margin-bottom: 15%;\n}\n\n.content {\n  padding: 16px;\n}\n\n.logo {\n  height: 32px;\n  margin-right: 16px;\n}\n\n.header-tow {\n  background: #ededed;\n  padding: 0 16px;\n  height: 50px;\n}\n\n.header-tow-button {\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.header-tow-button .a-button-Map,\n.header-tow-button .a-button-Data,\n.header-tow-button .a-button-user {\n  margin-left: 10px;\n  margin-right: 10px;\n  position: relative;\n  border: none;\n  background: #ededed;\n  box-shadow: none; /* 去除阴影 */\n}\n\n.active-tab::after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: #1890ff;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}