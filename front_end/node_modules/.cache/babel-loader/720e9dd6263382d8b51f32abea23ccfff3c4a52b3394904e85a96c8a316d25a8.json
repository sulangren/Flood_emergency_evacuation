{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { defineComponent, reactive } from \"vue\";\nimport { Form, Input, Button, Card, Layout } from \"ant-design-vue\";\n// import { reactive } from \"vue\";\nexport default defineComponent({\n  components: {\n    \"a-layout\": Layout,\n    \"a-layout-content\": Layout.Content,\n    \"a-card\": Card,\n    \"a-form\": Form,\n    \"a-form-item\": Form.Item,\n    \"a-input\": Input,\n    \"a-input-password\": Input.Password,\n    \"a-button\": Button\n  },\n  data() {\n    return {\n      activeTab: null,\n      isModalVisible: false,\n      // 控制模态框显示与隐藏\n      registerForm: reactive({\n        username: \"\",\n        password: \"\",\n        confirm: \"\",\n        employeeKey: \"\",\n        phone: \"\"\n      }),\n      rules: {\n        username: [{\n          required: false,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: false,\n          message: \"请输入密码\",\n          pattern: /^\\S{6,16}$/\n        }],\n        confirm: [{\n          required: false,\n          message: \"请确认密码\",\n          trigger: \"blur\"\n        }, {\n          validator(_, value) {\n            if (!value || value === registerForm.password) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(\"两次输入的密码不一致\"));\n          }\n        }],\n        employeeKey: [{\n          required: false\n        }],\n        phone: [{\n          required: false,\n          pattern: /^\\S{5,9}$/,\n          message: \"请输入正确的手机号\"\n        }]\n      }\n    };\n  },\n  setup() {\n    const registerForm = reactive({\n      username: \"\",\n      password: \"\",\n      confirm: \"\",\n      employeeKey: \"\",\n      phone: \"\"\n    });\n    const rules = {\n      username: [{\n        required: false,\n        message: \"请输入用户名\",\n        trigger: \"blur\"\n      }],\n      password: [{\n        required: false,\n        message: \"请输入密码\",\n        pattern: /^\\S{6,16}$/\n      }],\n      confirm: [{\n        required: false,\n        message: \"请确认密码\",\n        trigger: \"blur\"\n      }, {\n        validator(_, value) {\n          if (!value || value === registerForm.password) {\n            return Promise.resolve();\n          }\n          return Promise.reject(new Error(\"两次输入的密码不一致\"));\n        }\n      }],\n      employeeKey: [{\n        required: false\n      }],\n      phone: [{\n        required: false,\n        pattern: /^\\S{5,9}$/,\n        message: \"请输入正确的手机号\"\n      }]\n    };\n    return {\n      registerForm,\n      rules\n    };\n  },\n  methods: {\n    handleCancel() {\n      this.$router.push(\"/\");\n      this.isModalVisible = false; // 关闭模态框\n    },\n    login() {\n      const loginData = {\n        username: this.registerForm.username,\n        password: this.registerForm.password,\n        employeeKey: this.registerForm.employeeKey,\n        phone: this.registerForm.phone\n      };\n      console.log(\"Username:\", this.form.username);\n      console.log(\"Password:\", this.form.password);\n      console.log(\"EmployeeKey:\", this.form.password);\n      console.log(\"Phone:\", this.form.password);\n      axios.post(\"\", loginData).then(response => {\n        // 处理登录成功，例如保存token\n        localStorage.setItem(\"token\", response.data.token);\n        // 跳转到主页或其他页面\n        this.$router.push(\"/home\");\n      }).catch(error => {\n        // 处理错误\n        console.error(\"登录失败\", error);\n      });\n    }\n  }\n});","map":{"version":3,"names":["axios","defineComponent","reactive","Form","Input","Button","Card","Layout","components","Content","Item","Password","data","activeTab","isModalVisible","registerForm","username","password","confirm","employeeKey","phone","rules","required","message","trigger","pattern","validator","_","value","Promise","resolve","reject","Error","setup","methods","handleCancel","$router","push","login","loginData","console","log","form","post","then","response","localStorage","setItem","token","catch","error"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\EnrollWindow.vue"],"sourcesContent":["<template>\r\n  <a-layout class=\"layout\">\r\n    <a-layout-content style=\"padding: 24px\">\r\n      <a-card title=\"新用户注册\" :bordered=\"false\">\r\n        <a-form\r\n          ref=\"form\"\r\n          :model=\"registerForm\"\r\n          :rules=\"rules\"\r\n          @submit=\"login\"\r\n          layout=\"vertical\"\r\n        >\r\n          <a-form-item\r\n            name=\"username\"\r\n            label=\"新用户名\"\r\n            :labelCol=\"{ span: 24 }\"\r\n            :wrapperCol=\"{ span: 24 }\"\r\n            hasFeedback\r\n          >\r\n            <a-input\r\n              v-model:value=\"registerForm.username\"\r\n              placeholder=\"请输入新用户名\"\r\n            />\r\n          </a-form-item>\r\n          <a-form-item\r\n            name=\"password\"\r\n            label=\"密码\"\r\n            :labelCol=\"{ span: 24 }\"\r\n            :wrapperCol=\"{ span: 24 }\"\r\n            hasFeedback\r\n          >\r\n            <a-input-password\r\n              v-model:value=\"registerForm.password\"\r\n              placeholder=\"请输入密码\"\r\n            />\r\n          </a-form-item>\r\n          <a-form-item\r\n            name=\"confirm\"\r\n            label=\"确认密码\"\r\n            :labelCol=\"{ span: 24 }\"\r\n            :wrapperCol=\"{ span: 24 }\"\r\n            hasFeedback\r\n          >\r\n            <a-input-password\r\n              v-model:value=\"registerForm.confirm\"\r\n              placeholder=\"请确认密码\"\r\n            />\r\n          </a-form-item>\r\n          <a-form-item\r\n            name=\"employeeKey\"\r\n            label=\"员工密钥（可选）\"\r\n            :labelCol=\"{ span: 24 }\"\r\n            :wrapperCol=\"{ span: 24 }\"\r\n          >\r\n            <a-input\r\n              v-model:value=\"registerForm.employeeKey\"\r\n              placeholder=\"请输入员工密钥\"\r\n            />\r\n          </a-form-item>\r\n          <a-form-item\r\n            name=\"phone\"\r\n            label=\"手机号（可选）\"\r\n            :labelCol=\"{ span: 24 }\"\r\n            :wrapperCol=\"{ span: 24 }\"\r\n          >\r\n            <a-input\r\n              v-model:value=\"registerForm.phone\"\r\n              placeholder=\"请输入手机号\"\r\n            />\r\n          </a-form-item>\r\n          <a-form-item :wrapperCol=\"{ span: 24, offset: 0 }\">\r\n            <a-button type=\"primary\" htmlType=\"submit\">提交注册</a-button>\r\n            <a-button style=\"margin-left: 8px\" @click=\"handleCancel\"\r\n              >取消注册</a-button\r\n            >\r\n          </a-form-item>\r\n        </a-form>\r\n      </a-card>\r\n    </a-layout-content>\r\n  </a-layout>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { defineComponent, reactive } from \"vue\";\r\nimport { Form, Input, Button, Card, Layout } from \"ant-design-vue\";\r\n// import { reactive } from \"vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    \"a-layout\": Layout,\r\n    \"a-layout-content\": Layout.Content,\r\n    \"a-card\": Card,\r\n    \"a-form\": Form,\r\n    \"a-form-item\": Form.Item,\r\n    \"a-input\": Input,\r\n    \"a-input-password\": Input.Password,\r\n    \"a-button\": Button,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      activeTab: null,\r\n      isModalVisible: false, // 控制模态框显示与隐藏\r\n      registerForm: reactive({\r\n        username: \"\",\r\n        password: \"\",\r\n        confirm: \"\",\r\n        employeeKey: \"\",\r\n        phone: \"\",\r\n      }),\r\n      rules: {\r\n        username: [\r\n          {\r\n            required: false,\r\n            message: \"请输入用户名\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        password: [\r\n          {\r\n            required: false,\r\n            message: \"请输入密码\",\r\n            pattern: /^\\S{6,16}$/,\r\n          },\r\n        ],\r\n        confirm: [\r\n          { required: false, message: \"请确认密码\", trigger: \"blur\" },\r\n          {\r\n            validator(_, value) {\r\n              if (!value || value === registerForm.password) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(new Error(\"两次输入的密码不一致\"));\r\n            },\r\n          },\r\n        ],\r\n        employeeKey: [{ required: false }],\r\n        phone: [\r\n          {\r\n            required: false,\r\n            pattern: /^\\S{5,9}$/,\r\n            message: \"请输入正确的手机号\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  setup() {\r\n    const registerForm = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n      employeeKey: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    const rules = {\r\n      username: [\r\n        {\r\n          required: false,\r\n          message: \"请输入用户名\",\r\n          trigger: \"blur\",\r\n        },\r\n      ],\r\n      password: [\r\n        {\r\n          required: false,\r\n          message: \"请输入密码\",\r\n          pattern: /^\\S{6,16}$/,\r\n        },\r\n      ],\r\n      confirm: [\r\n        { required: false, message: \"请确认密码\", trigger: \"blur\" },\r\n        {\r\n          validator(_, value) {\r\n            if (!value || value === registerForm.password) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error(\"两次输入的密码不一致\"));\r\n          },\r\n        },\r\n      ],\r\n      employeeKey: [{ required: false }],\r\n      phone: [\r\n        {\r\n          required: false,\r\n          pattern: /^\\S{5,9}$/,\r\n          message: \"请输入正确的手机号\",\r\n        },\r\n      ],\r\n    };\r\n    return {\r\n      registerForm,\r\n      rules,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    handleCancel() {\r\n      this.$router.push(\"/\");\r\n      this.isModalVisible = false; // 关闭模态框\r\n    },\r\n    login() {\r\n      const loginData = {\r\n        username: this.registerForm.username,\r\n        password: this.registerForm.password,\r\n        employeeKey: this.registerForm.employeeKey,\r\n        phone: this.registerForm.phone,\r\n      };\r\n      console.log(\"Username:\", this.form.username);\r\n      console.log(\"Password:\", this.form.password);\r\n      console.log(\"EmployeeKey:\", this.form.password);\r\n      console.log(\"Phone:\", this.form.password);\r\n      axios\r\n        .post(\"\", loginData)\r\n        .then((response) => {\r\n          // 处理登录成功，例如保存token\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          // 跳转到主页或其他页面\r\n          this.$router.push(\"/home\");\r\n        })\r\n        .catch((error) => {\r\n          // 处理错误\r\n          console.error(\"登录失败\", error);\r\n        });\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  height: 100vh;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}