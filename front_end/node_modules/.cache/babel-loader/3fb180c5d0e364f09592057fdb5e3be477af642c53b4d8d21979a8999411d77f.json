{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input_password = _resolveComponent(\"a-input-password\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"register-title\"\n  }, \"新用户注册\", -1 /* HOISTED */)), _createVNode(_component_a_form, {\n    model: _ctx.form,\n    rules: _ctx.rules,\n    ref: \"formRef\",\n    \"label-col\": \"{ span: 8 }\",\n    \"wrapper-col\": \"{ span: 16 }\",\n    style: {\n      \"max-width\": \"600px\",\n      \"margin\": \"0 auto\"\n    },\n    initialValues: \"{ remember: true }\",\n    autoComplete: \"off\",\n    onFinish: _ctx.onFinish,\n    onFinishFailed: _ctx.onFinishFailed\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form_item, {\n      label: \"新用户名\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: '请输入新用户名!'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input, {\n        value: _ctx.form.username,\n        \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.form.username = $event)\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_form_item, {\n      label: \"密码\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input_password, {\n        value: _ctx.form.password,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.form.password = $event)\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_form_item, {\n      label: \"确认密码\",\n      name: \"confirmPassword\",\n      rules: [{\n        required: true,\n        message: '请确认密码!'\n      }, {\n        validator: _ctx.confirmPasswordValidator\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input_password, {\n        value: _ctx.form.confirmPassword,\n        \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.form.confirmPassword = $event)\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"rules\"]), _createVNode(_component_a_form_item, {\n      label: \"员工密钥（可选）\",\n      name: \"employeeKey\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input, {\n        value: _ctx.form.employeeKey,\n        \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.form.employeeKey = $event)\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_form_item, {\n      label: \"手机号（可选）\",\n      name: \"phone\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input, {\n        value: _ctx.form.phone,\n        \"onUpdate:value\": _cache[4] || (_cache[4] = $event => _ctx.form.phone = $event)\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_form_item, {\n      \"wrapper-col\": {\n        offset: 8,\n        span: 16\n      },\n      style: {\n        \"text-align\": \"right\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        style: {\n          \"margin-right\": \"8px\"\n        },\n        onClick: _ctx.handleCancel\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" 取消注册 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: _ctx.onSubmit\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" 提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\", \"onFinish\", \"onFinishFailed\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_a_form","model","_ctx","form","rules","ref","style","initialValues","autoComplete","onFinish","onFinishFailed","default","_withCtx","_component_a_form_item","label","name","required","message","_component_a_input","value","username","_cache","$event","_","_component_a_input_password","password","confirmPasswordValidator","confirmPassword","employeeKey","phone","offset","span","_component_a_button","onClick","handleCancel","_createTextVNode","type","onSubmit"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\EnrollWindow.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"register-title\">新用户注册</div>\r\n    <a-form\r\n      :model=\"form\"\r\n      :rules=\"rules\"\r\n      ref=\"formRef\"\r\n      label-col=\"{ span: 8 }\"\r\n      wrapper-col=\"{ span: 16 }\"\r\n      style=\"max-width: 600px; margin: 0 auto\"\r\n      initialValues=\"{ remember: true }\"\r\n      autoComplete=\"off\"\r\n      @finish=\"onFinish\"\r\n      @finish-failed=\"onFinishFailed\"\r\n    >\r\n      <a-form-item\r\n        label=\"新用户名\"\r\n        name=\"username\"\r\n        :rules=\"[{ required: true, message: '请输入新用户名!' }]\"\r\n      >\r\n        <a-input v-model:value=\"form.username\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        :rules=\"[{ required: true, message: '请输入密码!' }]\"\r\n      >\r\n        <a-input-password v-model:value=\"form.password\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item\r\n        label=\"确认密码\"\r\n        name=\"confirmPassword\"\r\n        :rules=\"[\r\n          { required: true, message: '请确认密码!' },\r\n          { validator: confirmPasswordValidator },\r\n        ]\"\r\n      >\r\n        <a-input-password v-model:value=\"form.confirmPassword\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"员工密钥（可选）\" name=\"employeeKey\">\r\n        <a-input v-model:value=\"form.employeeKey\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"手机号（可选）\" name=\"phone\">\r\n        <a-input v-model:value=\"form.phone\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item\r\n        :wrapper-col=\"{ offset: 8, span: 16 }\"\r\n        style=\"text-align: right\"\r\n      >\r\n        <a-button style=\"margin-right: 8px\" @click=\"handleCancel\">\r\n          取消注册\r\n        </a-button>\r\n        <a-button type=\"primary\" @click=\"onSubmit\"> 提交 </a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, reactive, ref } from \"vue\";\r\nimport { Form, Input, InputPassword, Checkbox, Button } from \"ant-design-vue\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    \"a-form\": Form,\r\n    \"a-input\": Input,\r\n    \"a-input-password\": InputPassword,\r\n    \"a-checkbox\": Checkbox,\r\n    \"a-button\": Button,\r\n  },\r\n  setup() {\r\n    const formRef = ref(null);\r\n    const form = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      employeeKey: \"\",\r\n      phone: \"\",\r\n      remember: true,\r\n    });\r\n\r\n    const rules = {\r\n      username: [{ required: true, message: \"请输入新用户名!\" }],\r\n      password: [{ required: true, message: \"请输入密码!\" }],\r\n      confirmPassword: [{ required: true, message: \"请确认密码!\" }],\r\n      employeeKey: [],\r\n      phone: [],\r\n    };\r\n\r\n    const confirmPasswordValidator = (rule, value) => {\r\n      if (value !== form.password) {\r\n        return Promise.reject(new Error(\"两次输入的密码不匹配!\"));\r\n      }\r\n      return Promise.resolve();\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n      console.log(\"Success:\", values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n      formRef.value.validate((valid) => {\r\n        if (valid) {\r\n          formRef.value.submit();\r\n        } else {\r\n          console.log(\"Error:\", \"Validation failed\");\r\n        }\r\n      });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n      console.log(\"Registration cancelled\");\r\n      // 可以在这里添加取消注册的逻辑，例如清空表单或返回上一页\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      formRef,\r\n      onFinish,\r\n      onFinishFailed,\r\n      onSubmit,\r\n      handleCancel,\r\n      confirmPasswordValidator,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n.register-container {\r\n  text-align: right;\r\n  padding-top: 20px;\r\n}\r\n\r\n.register-title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  margin-right: 20px; /* 确保标题靠右 */\r\n}\r\n\r\n/* 覆盖Ant Design Vue的默认样式，去除表单边框 */\r\n.ant-form {\r\n  border: none;\r\n  box-shadow: none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}