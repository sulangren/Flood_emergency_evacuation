{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, ref, onMounted, watch } from \"vue\";\nimport { getTramSorted, searchCriteria } from \"@/api/tram\";\nexport default defineComponent({\n  setup() {\n    // 查询参数\n    const queryParam = ref({\n      selectedOption: \"\" // 默认选项为空\n    });\n\n    // 表格数据\n    const data = ref([]);\n    const sortedData = ref([]); // 排序后的数据\n\n    // 分页参数\n    const current = ref(1);\n    const pageSize = ref(10);\n    const totalItems = ref(0);\n\n    // 获取当前页数据\n    const getPagedData = () => {\n      const startIndex = (current.value - 1) * pageSize.value;\n      const endIndex = startIndex + pageSize.value;\n      return sortedData.value.slice(startIndex, endIndex); // 返回当前页数据\n    };\n\n    // 处理查询\n    const handleSearch = async () => {\n      try {\n        console.log(queryParam.value); // 打印选中的查询条件\n        const response = await searchCriteria(queryParam.value);\n        if (response.data.code === 0) {\n          const formattedData = response.data.data.map(item => ({\n            ...item,\n            tags: item.tags && typeof item.tags === \"string\" // 确保 tags 字段存在且为字符串\n            ? item.tags.split(\";\").map(tag => tag.trim()).filter((tag, index, self) => self.indexOf(tag) === index) : [] // 如果没有 tags 字段，返回空数组\n          }));\n          sortedData.value = formattedData;\n          totalItems.value = formattedData.length;\n        } else {\n          console.log(response.data.message || \"No data found\");\n        }\n      } catch (error) {\n        console.error(\"Error searching data:\", error);\n      }\n    };\n\n    // 默认加载排序后的数据\n    onMounted(async () => {\n      try {\n        const response = await getTramSorted();\n        console.log(response.data.data);\n        if (response.data.code === 0) {\n          const formattedData = response.data.data.map(item => ({\n            ...item,\n            tags: item.tags ? item.tags.split(\";\").map(tag => tag.trim()).filter((tag, index, self) => self.indexOf(tag) === index) : [] // 如果没有 tags 字段，设置为空数组\n          }));\n          sortedData.value = formattedData;\n          totalItems.value = formattedData.length;\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    });\n\n    // 监听 selectedOption 变化，调试用\n    watch(() => queryParam.value.selectedOption, (newValue, oldValue) => {\n      console.log(`selectedOption changed from ${oldValue} to ${newValue}`);\n    });\n\n    // 分页改变时，触发此方法\n    const handlePageChange = page => {\n      current.value = page;\n    };\n\n    // 监听排序\n    const handleSortChange = (pagination, filters, sorter) => {\n      // 根据 sorter 对数据进行排序\n      if (sorter.field) {\n        sortedData.value.sort((a, b) => {\n          if (a[sorter.field] < b[sorter.field]) return sorter.order === \"ascend\" ? -1 : 1;\n          if (a[sorter.field] > b[sorter.field]) return sorter.order === \"ascend\" ? 1 : -1;\n          return 0;\n        });\n      }\n    };\n    const columns = [{\n      title: \"编号\",\n      dataIndex: \"id\",\n      key: \"id\",\n      // 唯一标识\n      defaultSortOrder: \"ascend\",\n      // 默认按升序排列\n      sorter: (a, b) => a.id - b.id // 按 id 字段升序排序\n    }, {\n      title: \"当前车辆所属停车点\",\n      dataIndex: \"current_location\",\n      key: \"current_location\" // 唯一标识\n    }, {\n      title: \"当前车辆所属状态\",\n      dataIndex: \"status\",\n      key: \"status\" // 唯一标识\n    }, {\n      title: \"当前自行车剩余电量\",\n      dataIndex: \"remaining_battery\",\n      key: \"remaining_battery\",\n      // 唯一标识\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => a.remaining_battery - b.remaining_battery\n    }];\n    return {\n      queryParam,\n      data,\n      columns,\n      current,\n      pageSize,\n      totalItems,\n      handleSearch,\n      getPagedData,\n      handlePageChange,\n      handleSortChange\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","onMounted","watch","getTramSorted","searchCriteria","setup","queryParam","selectedOption","data","sortedData","current","pageSize","totalItems","getPagedData","startIndex","value","endIndex","slice","handleSearch","console","log","response","code","formattedData","map","item","tags","split","tag","trim","filter","index","self","indexOf","length","message","error","newValue","oldValue","handlePageChange","page","handleSortChange","pagination","filters","sorter","field","sort","a","b","order","columns","title","dataIndex","key","defaultSortOrder","id","remaining_battery"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\Data_Sheet.vue"],"sourcesContent":["<template>\r\n  <a-card>\r\n    <a-form layout=\"inline\">\r\n      <a-form-item label=\"选择条件\" class=\"form-item\">\r\n        <a-select\r\n          v-model:value=\"queryParam.selectedOption\"\r\n          placeholder=\"请选择\"\r\n          class=\"form-item-button-one\"\r\n        >\r\n          <a-select-option value=\"normal\">正常</a-select-option>\r\n          <a-select-option value=\"Low_battery\">低电量(低于20%)</a-select-option>\r\n          <a-select-option value=\"maintenance\">待维护</a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          type=\"primary\"\r\n          @click=\"handleSearch\"\r\n          class=\"form-item-button-tow\"\r\n        >\r\n          查询\r\n        </a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-card>\r\n\r\n  <a-table\r\n    :columns=\"columns\"\r\n    :data-source=\"getPagedData()\"\r\n    :row-key=\"(record) => record.id\"\r\n    :pagination=\"false\"\r\n    @change=\"handleSortChange\"\r\n  >\r\n    <template v-slot:bodyCell=\"{ column, record }\">\r\n      <template v-if=\"column.key === 'name'\">\r\n        <a>{{ record.name }}</a>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'tags'\">\r\n        <span>\r\n          <a-tag\r\n            v-for=\"tag in record.tags\"\r\n            :key=\"tag\"\r\n            :color=\"\r\n              tag === 'loser'\r\n                ? 'volcano'\r\n                : tag.length > 5\r\n                ? 'geekblue'\r\n                : 'green'\r\n            \"\r\n          >\r\n            {{ tag.toUpperCase() }}\r\n          </a-tag>\r\n        </span>\r\n      </template>\r\n      <template v-else-if=\"column.key === 'rate'\">\r\n        <a-rate :value=\"record.rating\" disabled allow-half />\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n\r\n  <a-layout-footer>\r\n    <a-pagination\r\n      v-model=\"current\"\r\n      :total=\"totalItems\"\r\n      :page-size=\"pageSize\"\r\n      @change=\"handlePageChange\"\r\n      show-size-changer\r\n      show-less-items\r\n    />\r\n  </a-layout-footer>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted, watch } from \"vue\";\r\nimport { getTramSorted, searchCriteria } from \"@/api/tram\";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    // 查询参数\r\n    const queryParam = ref({\r\n      selectedOption: \"\", // 默认选项为空\r\n    });\r\n\r\n    // 表格数据\r\n    const data = ref([]);\r\n    const sortedData = ref([]); // 排序后的数据\r\n\r\n    // 分页参数\r\n    const current = ref(1);\r\n    const pageSize = ref(10);\r\n    const totalItems = ref(0);\r\n\r\n    // 获取当前页数据\r\n    const getPagedData = () => {\r\n      const startIndex = (current.value - 1) * pageSize.value;\r\n      const endIndex = startIndex + pageSize.value;\r\n      return sortedData.value.slice(startIndex, endIndex); // 返回当前页数据\r\n    };\r\n\r\n    // 处理查询\r\n    const handleSearch = async () => {\r\n      try {\r\n        console.log(queryParam.value); // 打印选中的查询条件\r\n        const response = await searchCriteria(queryParam.value);\r\n\r\n        if (response.data.code === 0) {\r\n          const formattedData = response.data.data.map((item) => ({\r\n            ...item,\r\n            tags:\r\n              item.tags && typeof item.tags === \"string\" // 确保 tags 字段存在且为字符串\r\n                ? item.tags\r\n                    .split(\";\")\r\n                    .map((tag) => tag.trim())\r\n                    .filter((tag, index, self) => self.indexOf(tag) === index)\r\n                : [], // 如果没有 tags 字段，返回空数组\r\n          }));\r\n          sortedData.value = formattedData;\r\n          totalItems.value = formattedData.length;\r\n        } else {\r\n          console.log(response.data.message || \"No data found\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error searching data:\", error);\r\n      }\r\n    };\r\n\r\n    // 默认加载排序后的数据\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await getTramSorted();\r\n        console.log(response.data.data);\r\n        if (response.data.code === 0) {\r\n          const formattedData = response.data.data.map((item) => ({\r\n            ...item,\r\n            tags: item.tags\r\n              ? item.tags\r\n                  .split(\";\")\r\n                  .map((tag) => tag.trim())\r\n                  .filter((tag, index, self) => self.indexOf(tag) === index)\r\n              : [], // 如果没有 tags 字段，设置为空数组\r\n          }));\r\n          sortedData.value = formattedData;\r\n          totalItems.value = formattedData.length;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    });\r\n\r\n    // 监听 selectedOption 变化，调试用\r\n    watch(\r\n      () => queryParam.value.selectedOption,\r\n      (newValue, oldValue) => {\r\n        console.log(`selectedOption changed from ${oldValue} to ${newValue}`);\r\n      }\r\n    );\r\n\r\n    // 分页改变时，触发此方法\r\n    const handlePageChange = (page) => {\r\n      current.value = page;\r\n    };\r\n\r\n    // 监听排序\r\n    const handleSortChange = (pagination, filters, sorter) => {\r\n      // 根据 sorter 对数据进行排序\r\n      if (sorter.field) {\r\n        sortedData.value.sort((a, b) => {\r\n          if (a[sorter.field] < b[sorter.field])\r\n            return sorter.order === \"ascend\" ? -1 : 1;\r\n          if (a[sorter.field] > b[sorter.field])\r\n            return sorter.order === \"ascend\" ? 1 : -1;\r\n          return 0;\r\n        });\r\n      }\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"编号\",\r\n        dataIndex: \"id\",\r\n        key: \"id\", // 唯一标识\r\n        defaultSortOrder: \"ascend\", // 默认按升序排列\r\n        sorter: (a, b) => a.id - b.id, // 按 id 字段升序排序\r\n      },\r\n      {\r\n        title: \"当前车辆所属停车点\",\r\n        dataIndex: \"current_location\",\r\n        key: \"current_location\", // 唯一标识\r\n      },\r\n      {\r\n        title: \"当前车辆所属状态\",\r\n        dataIndex: \"status\",\r\n        key: \"status\", // 唯一标识\r\n      },\r\n      {\r\n        title: \"当前自行车剩余电量\",\r\n        dataIndex: \"remaining_battery\",\r\n        key: \"remaining_battery\", // 唯一标识\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.remaining_battery - b.remaining_battery,\r\n      },\r\n    ];\r\n\r\n    return {\r\n      queryParam,\r\n      data,\r\n      columns,\r\n      current,\r\n      pageSize,\r\n      totalItems,\r\n      handleSearch,\r\n      getPagedData,\r\n      handlePageChange,\r\n      handleSortChange,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n/* 你可以在这里添加样式 */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}