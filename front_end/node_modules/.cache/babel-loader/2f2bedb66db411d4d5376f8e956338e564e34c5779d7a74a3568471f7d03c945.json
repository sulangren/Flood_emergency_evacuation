{"ast":null,"code":"import { Layout, Select, Table, Button, Row, Col, Pagination } from \"ant-design-vue\";\nexport default {\n  components: {\n    \"a-layout\": Layout,\n    \"a-layout-header\": Layout.Header,\n    \"a-layout-content\": Layout.Content,\n    \"a-layout-Footer\": Layout.Footer,\n    \"a-select\": Select,\n    \"a-table\": Table,\n    \"a-button\": Button,\n    \"a-row\": Row,\n    \"a-col\": Col,\n    \"a-pagination\": Pagination\n  },\n  data() {\n    return {\n      queryParam: {\n        status: \"\"\n      },\n      data: [\n        // 表格数据...\n      ],\n      columns: [\n        // 表格列...\n      ],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 100 // 假设总数据量为100\n      }\n    };\n  },\n  methods: {\n    handleSearch() {\n      console.log(\"Search with\", this.queryParam);\n      // 根据 queryParam 来过滤或查询数据\n      // 这里应该调用获取数据的方法，并更新 pagination.total\n    },\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination, filters, sorter);\n      // 根据分页、筛选、排序来更新数据\n      // 这里应该调用获取数据的方法，并更新 pagination.total\n    },\n    handlePaginationChange(page, pageSize) {\n      this.pagination.current = page;\n      this.pagination.pageSize = pageSize;\n      // 调用查询方法，传入新的分页参数\n      this.handleSearch();\n    }\n  }\n};","map":{"version":3,"names":["Layout","Select","Table","Button","Row","Col","Pagination","components","Header","Content","Footer","data","queryParam","status","columns","pagination","current","pageSize","total","methods","handleSearch","console","log","handleTableChange","filters","sorter","handlePaginationChange","page"],"sources":["E:\\code\\Django\\project\\front\\front\\src\\components\\Data_Sheet.vue"],"sourcesContent":["<template>\r\n  <a-layout class=\"layout\">\r\n    <a-layout-header class=\"header-one\">\r\n      <a-row type=\"flex\" justify=\"end\" align=\"middle\" class=\"header-one-layout\">\r\n        <a-col :span=\"3\">\r\n          <a-select\r\n            v-model=\"queryParam.status\"\r\n            style=\"width: 100%; margin-right: 8px\"\r\n            placeholder=\"请选择状态\"\r\n          >\r\n            <a-select-option value=\"normal\">正常</a-select-option>\r\n            <a-select-option value=\"Low_battery\">低电量(>20%)</a-select-option>\r\n            <a-select-option value=\"maintenance\">待维护</a-select-option>\r\n          </a-select>\r\n        </a-col>\r\n        <a-col :span=\"1\">\r\n          <a-button type=\"primary\" @click=\"handleSearch\" block>查询</a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </a-layout-header>\r\n    <a-layout-content class=\"content\">\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :dataSource=\"data\"\r\n        :pagination=\"false\"\r\n        @change=\"handleTableChange\"\r\n      />\r\n    </a-layout-content>\r\n    <a-layout-Footer>\r\n      <a-pagination\r\n        v-model:current=\"pagination.current\"\r\n        :total=\"pagination.total\"\r\n        :pageSize=\"pagination.pageSize\"\r\n        @change=\"handlePaginationChange\"\r\n        showSizeChanger\r\n      />\r\n    </a-layout-Footer>\r\n  </a-layout>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  Layout,\r\n  Select,\r\n  Table,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n} from \"ant-design-vue\";\r\n\r\nexport default {\r\n  components: {\r\n    \"a-layout\": Layout,\r\n    \"a-layout-header\": Layout.Header,\r\n    \"a-layout-content\": Layout.Content,\r\n    \"a-layout-Footer\": Layout.Footer,\r\n    \"a-select\": Select,\r\n    \"a-table\": Table,\r\n    \"a-button\": Button,\r\n    \"a-row\": Row,\r\n    \"a-col\": Col,\r\n    \"a-pagination\": Pagination,\r\n  },\r\n  data() {\r\n    return {\r\n      queryParam: {\r\n        status: \"\",\r\n      },\r\n      data: [\r\n        // 表格数据...\r\n      ],\r\n      columns: [\r\n        // 表格列...\r\n      ],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 100, // 假设总数据量为100\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      console.log(\"Search with\", this.queryParam);\r\n      // 根据 queryParam 来过滤或查询数据\r\n      // 这里应该调用获取数据的方法，并更新 pagination.total\r\n    },\r\n    handleTableChange(pagination, filters, sorter) {\r\n      console.log(pagination, filters, sorter);\r\n      // 根据分页、筛选、排序来更新数据\r\n      // 这里应该调用获取数据的方法，并更新 pagination.total\r\n    },\r\n    handlePaginationChange(page, pageSize) {\r\n      this.pagination.current = page;\r\n      this.pagination.pageSize = pageSize;\r\n      // 调用查询方法，传入新的分页参数\r\n      this.handleSearch();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  height: 100vh;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.header-one {\r\n  background: #fff;\r\n  padding: 0 16px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.header-one-layout {\r\n  width: 100%;\r\n}\r\n\r\n.content {\r\n  padding: 16px;\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,SACEA,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,MAAM,EACNC,GAAG,EACHC,GAAG,EACHC,UAAU,QACL,gBAAgB;AAEvB,eAAe;EACbC,UAAU,EAAE;IACV,UAAU,EAAEP,MAAM;IAClB,iBAAiB,EAAEA,MAAM,CAACQ,MAAM;IAChC,kBAAkB,EAAER,MAAM,CAACS,OAAO;IAClC,iBAAiB,EAAET,MAAM,CAACU,MAAM;IAChC,UAAU,EAAET,MAAM;IAClB,SAAS,EAAEC,KAAK;IAChB,UAAU,EAAEC,MAAM;IAClB,OAAO,EAAEC,GAAG;IACZ,OAAO,EAAEC,GAAG;IACZ,cAAc,EAAEC;EAClB,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;MACDF,IAAI,EAAE;QACJ;MAAA,CACD;MACDG,OAAO,EAAE;QACP;MAAA,CACD;MACDC,UAAU,EAAE;QACVC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,GAAG,CAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACbC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACV,UAAU,CAAC;MAC3C;MACA;IACF,CAAC;IACDW,iBAAiBA,CAACR,UAAU,EAAES,OAAO,EAAEC,MAAM,EAAE;MAC7CJ,OAAO,CAACC,GAAG,CAACP,UAAU,EAAES,OAAO,EAAEC,MAAM,CAAC;MACxC;MACA;IACF,CAAC;IACDC,sBAAsBA,CAACC,IAAI,EAAEV,QAAQ,EAAE;MACrC,IAAI,CAACF,UAAU,CAACC,OAAM,GAAIW,IAAI;MAC9B,IAAI,CAACZ,UAAU,CAACE,QAAO,GAAIA,QAAQ;MACnC;MACA,IAAI,CAACG,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}